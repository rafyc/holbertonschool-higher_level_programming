>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]

Test Numbers
-----------
>>> matrix_divided(matrix, 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix_divided(matrix, 1.33)
[[0.75, 1.5, 2.26], [3.01, 3.76, 4.51]]

>>> matrix_divided(matrix, -5)
[[-0.2, -0.4, -0.6], [-0.8, -1.0, -1.2]]

>>> matrix_divided(matrix, -5)
[[-0.2, -0.4, -0.6], [-0.8, -1.0, -1.2]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[1.33, 2.33, 3.33], [4.33, 5.33, 6.33]]

>>> matrix_divided(matrix, 1.33)
[[1.0, 1.75, 2.5], [3.26, 4.01, 4.76]]

>>> matrix_divided(matrix,)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'


Type
-----------

>>> matrix_divided(matrix, (5, 10))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5]]

>>> matrix_divided(matrix, 5)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, "h", 3], [4, 5, 6]]

>>> matrix_divided(matrix, 5)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = ((1, 2, 3), (4, 5, 6))
>>> matrix_divided(matrix, 5)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
